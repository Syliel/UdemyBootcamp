/* Values are things like: static, relative, absolute, fixed, sticky 
Static: (default) The element is positioned according to the normal flow of the document. 
The top, right, bottom, left and z-index properites have no effect. This is the default value

Relative: The element is positioned according to the normal flow of the document, and then offset relative to itself
based on the values of top, right, bottom and left. The offset does not affect the position of any other elements,
thus the space given for the element in the page layout is the same as if position were static.

This value creates a new stacking context when the value of the z-index is not auto. Its effect on table-*-group, table-row,
table-column, table-cell, and table-caption elements is undefined.

Absolute: The element is removed from the normal document flow, and no space is created for the element in the page layout. 
It is positioned relative to its closest positioned ancestor, if any; otherwise, it is placed relative to the initial containing block.
Its final position is determined by the values of top, right, bottom and left.

This value creates a new stacking context when the value of z-index is not auto. The margins of absolutely positioned boxes do not
collapse with other margins.

Fixed: The element is removed from the normal document flow, and no space is created for the element in the page layout. It is positioned
relative to the initial containing block established by the viewpoert, except when one of its ancestors has a transform, perspective, or filter
property set to something other than none, in which case the ancestor behaves as the containing block. 
Its final position is determined by the values of top, right, bottom and left. 

This value always creates a new stacking context. In printed documents, the element is placed in the same position on every page.

Sticky: The element is positioned according to the normal flow of the document, and then offset relative to its nearest scrolling ancestor
and containing block (nearest block-level ancestor), including table-related elements, based on the values of top, right, bottom and left.
The offset does not affect the position of any other elements.

This value always creates a new stacking context. Note that sticky element "sticks" to its nearest ancestor that has a "scrolling mechanism"
even if that ancestor isn't the nearest actually scrolling ancestory. This effectively inhibits any "sticky" behavior.*/

div {
    width: 100px;
    height: 100px;
    background-color: #3d405b;
    border: 2px solid black;
    margin: 10px;
    display: inline-block;
}

#middle {
    background-color: #81b29a;
}

#static #middle {
    position: static;
}

/* if change top in static, nothing happens, but in relative it pushes it down. Can use negative numbers to go opposite direction */

#relative #middle {
    position: relative;
    top: 50px;
    left: 50px;
}

#absolute {
    position: relative;
}
/* positioned relative to its parent... if no parent, then positioned to container of document, aka body */
#absolute #middle {
    position: absolute;
    top: 1px;
    left: 1px;
}
/* fixed is like absolute, but always relates to the container, never any parents */
#fixed #middle {
    position: fixed;
    top: 0;
    left: 400px;
}
/* sticky also scrolls with the page like fixed, but does not start in a fixed position */